#include <stdio.h>
//int main()
//{
//	short s = 0;
//	int a = 10;
//	printf("%d\n", sizeof(s = a + 5));
//	printf("%d\n", s);
//	return 0;
//}

//int main()
//{
//	int c = 0;
//	printf("%d\n", ~c);//按二进制按位取反
//	int a = 11;
//	a = a | (1 << 2);//将11的二进制为的右3位0改为1
//	printf("%d\n", a);
//	a = a & (~(1 << 2));//将改变的数字再改回去
//	printf("%d\n", a);
//}

//int main()
//{
//	int a = (int)3.14;//将3.14强制转换为整型
//	printf("%d\n", a);
//	return 0;
//}

//int main()
//{
//	int a = 3;
//	int b = 0;
//	int c = a && b;
//	printf("%d\n", c);
//	return 0;
//}

//int main()
//{
//	int a = 2;
//	int b = 0;
//	b = (a > b ? a : b);
//	printf("%d\n", b);
//}


//int get_max(int x, int y)
//{
//	return x > y ? x : y;
//}
//
//int main()
//{
//	int a[10] = { 0 };
//	a[4] = 10;
//
//	int a = 10;
//	int b = 20;
//	int max = get_max(a, b);
//	printf("%d\n", max);
//
//
//	return 0;
//}

//struct Stu  //创建了一个结构体类型
//{
//	char name[20];
//	int age;
//	char id[20];
//};
//
//int main()
//{
//	struct Stu s1 = { "张三",20,"2021012411"};//使用struct Stu这个类型创建了一个学生对象s1，并初始化
//	struct Stu* ps = &s1;
//
//	printf("%s\n", ps->name);//不用\n,会自动换行
//	printf("%s\n", ps->id);
//
//	printf("%s\n", (*ps).name);
//	
//	printf("%s\n", s1.name);
//	printf("%d\n", s1.age);
//	printf("%s\n", s1.id);
//	return 0;
//}

int main()
{
	char a = 3;//字符占一个字节，有8个二进制位
	char b = 127;
	char c = a + b;
	printf("%d\n", c);
	return 0;
}
